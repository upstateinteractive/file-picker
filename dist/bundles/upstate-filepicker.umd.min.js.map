{
  "version": 3,
  "file": "upstate-filepicker.umd.min.js",
  "sources": [
    "ng://@upstate/filepicker/out/src/file-picker/file-picker.component.ts"
  ],
  "sourcesContent": [
    "import { Component, Input, AfterViewInit, ViewChild, ElementRef, forwardRef, OnInit } from '@angular/core';\nimport filestack from 'filestack-js';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const FILEPICKER_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => FilePickerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'obg-file-picker',\n  template: `<button class=\"upload\" mat-raised-button (click)=\"upload()\">Upload Files</button>`,\n  styles: [`.upload{\n  width:150px;\n  margin:20px 0;\n}`],\n  providers: [FILEPICKER_CONTROL_VALUE_ACCESSOR]\n})\nexport class FilePickerComponent implements ControlValueAccessor, OnInit {\n  @Input() options;\n  @Input() apikey;\n  private client;\n  onChange: (value: any) => void = () => {};\n  onTouched = () => {};\n\n  constructor() { }\n\n  upload() {\n    this.client.pick(this.options)\n    .then(data => {\n      this.onChange(data.filesUploaded);\n    });\n  }\n\n  writeValue(control) {\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  ngOnInit() {\n    this.client = filestack.init(this.apikey);\n  }\n\n}\n"
  ],
  "names": [
    "FILEPICKER_CONTROL_VALUE_ACCESSOR",
    "provide",
    "NG_VALUE_ACCESSOR",
    "useExisting",
    "forwardRef",
    "FilePickerComponent",
    "multi",
    "this",
    "onChange",
    "onTouched",
    "prototype",
    "upload",
    "_this",
    "client",
    "pick",
    "options",
    "then",
    "data",
    "filesUploaded",
    "writeValue",
    "control",
    "registerOnChange",
    "fn",
    "registerOnTouched",
    "ngOnInit",
    "filestack",
    "init",
    "apikey",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "styles",
    "providers",
    "Input"
  ],
  "mappings": "ibAAA,IAIaA,GACXC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,OAAAC,IAC9BC,OAAO,GAYTD,EAAA,WAOE,SAAFA,IAHAE,KAAAC,SAAmC,aACnCD,KAAAE,UAAc,oBAIZJ,EAAFK,UAAAC,OAAE,WAAA,IAAFC,EAAAL,KACIA,KAAKM,OAAOC,KAAKP,KAAKQ,SACrBC,KAAK,SAAAC,GACJL,EAAKJ,SAASS,EAAKC,kBAIvBb,EAAFK,UAAAS,WAAE,SAAWC,KAGXf,EAAFK,UAAAW,iBAAE,SAAiBC,GACff,KAAKC,SAAWc,GAGlBjB,EAAFK,UAAAa,kBAAE,SAAkBD,GAChBf,KAAKE,UAAYa,GAGnBjB,EAAFK,UAAAc,SAAE,WACEjB,KAAKM,OAASY,EAAUC,KAAKnB,KAAKoB,WA5BtC,kBATAC,KAACC,EAAAA,UAADC,OACEC,SAAU,kBACVC,SAAU,oFACVC,QAAS,iDAITC,WAAYlC,+DAGde,UAAAa,KAAGO,EAAAA,QACHR,SAAAC,KAAGO,EAAAA"
}
